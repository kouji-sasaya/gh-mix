name: release
on:
  push:
    tags:
      # セマンティックバージョンのタグをリリースする。vなし
      - "[0-9]*.[0-9]*.[0-9]*"

permissions:
  contents: write

jobs:
  release:
    name: Release binary for multi OS
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: linux-amd64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.28.x'

      - name: Configure the project
        run: cmake -S . -B build -DVERSION=${{ github.ref_name }}

      - name: Build the project
        run: cmake --build build --config Release

      - name: Package the project
        run: cmake --build build --target package

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - uses: cli/gh-extension-precompile@v1
        with:
          build_script_override: "script/build.sh"
        env:
          TARGET: ${{ matrix.target }}
          ARTIFACT: ${{ matrix.artifact }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # ex: build/gh-actibity-1.0.0-linux-amd64.tar.gz
          asset_path: build/gh-mix-${{ github.ref_name }}-${{ matrix.artifact }}.tar.gz
          asset_name: gh-mix_${{ github.ref_name }}_${{ matrix.artifact }}.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
