name: Release

permissions:
  contents: write

on:
  push:
    tags:
      # セマンティックバージョンのタグをリリースする。vなし
      - "[0-9]*.[0-9]*.[0-9]*"
      
jobs:
  build-and-release:
    name: Release binary for multi platform
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: linux-amd64
          #- os: windows-latest
          #  target: x86_64-pc-windows-msvc
          #  artifact: windows-amd64.exe
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.28.x'
  
      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Configure the project
        run: cmake -S . -B build -DVERSION=${{ github.ref_name }}

      - name: Build the project
        run: cmake --build build --config Release

      - name: Package the project
        run: cmake --build build --target package

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: debug
        run: |
          echo TARGET: ${{ matrix.target }}
          echo ARTIFACT: ${{ matrix.artifact }}

      - name: Upload C binary
        uses: actions/upload-artifact@v2
        with:
          name: gh-mix_${{ github.ref_name }}_linux_amd64_c
          path: ./build/c/gh-mix-c/gh-mix-c

      - name: Upload C++ binary
        uses: actions/upload-artifact@v2
        with:
          name: gh-mix_${{ github.ref_name }}_linux_amd64_cpp
          path: ./build/cpp/gh-mix-cpp/gh-mix-cpp

      - name: Upload Rust binary
        uses: actions/upload-artifact@v2
        with:
          name: gh-mix_${{ github.ref_name }}_linux_amd64_rust
          path: ./build/rust/gh-mix-rust/release/gh-mix-rust


      #- uses: cli/gh-extension-precompile@v1
      #  with:
      #    build_script_override: "script/build.sh"
      #  env:
      #    TARGET: ${{ matrix.target }}
      #    ARTIFACT: ${{ matrix.artifact }}
